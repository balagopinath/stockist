# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type UserProfile @model
{
  Id: ID! @primaryKey
  userId: String!  @index(name: "byUserId", sortKeyFields: ["Id"])
  userName: String!
}

type Exchange @model
{
  Id: ID! @primaryKey
  name: String!
  code: String!
  stocks: [Script] @hasMany(indexName: "byExchange", fields: ["Id"])
}

type IndustrySector @model
{
  Id: ID! @primaryKey
  name: String!
  industries: [Industry] @hasMany(indexName: "byIndustrySector", fields: ["Id"])
  parentISId: ID @index(name: "byParentIS")
  parentIndustrySector: IndustrySector @belongsTo(fields: ["parentISId"])
  subIndustrySectors: [IndustrySector] @hasMany(indexName: "byParentIS", fields: ["Id"])
}

type Industry @model
{
  Id: ID! @primaryKey
  name: String!
  industrySectorId: ID @index(name: "byIndustrySector")
  industrySector: IndustrySector @belongsTo(fields: ["industrySectorId"])
  companies: [Company] @hasMany(indexName: "byIndustry", fields: ["Id"])
  parentIndustryId: ID @index(name: "byParentIndustry")
  parentIndustry: Industry @belongsTo(fields: ["parentIndustryId"])
  subIndustries: [Industry] @hasMany(indexName: "byParentIndustry", fields: ["Id"])
}

type Company @model
{
  Id: ID! @primaryKey
  name: String!
  ISIN: String
  marketCap: Float
  industryId: ID @index(name: "byIndustry")
  industry: Industry @belongsTo(fields: ["industryId"])
  scripts: [Script] @hasMany(indexName: "byCompany", fields: ["Id"])
}

type Script @model 
{
  Id: ID! @primaryKey
  exchangeId: ID! @index(name: "byExchange")
  exchange: Exchange! @belongsTo(fields: ["exchangeId"])
  companyId: ID!  @index(name: "byCompany")
  company: Company! @belongsTo(fields: ["companyId"])
  code: String!
  LTP: Float
  LTV: Int
  TradedAt: AWSDateTime
}

type StockTick @model
{
  Id: ID! @primaryKey
  stockId: ID! @index(name: "byStockPrice")
  LTP: Float!
  tickTime: AWSDateTime!
}

type StockUserAssociation @model
{
  Id: ID! @primaryKey
  stockId: ID! @index(name: "byStockUser")
  userProfileId: ID! @index(name: "byUserStock")
  openingStocks: Int!
}

type Trade @model
{
  Id: ID! @primaryKey
  stockUserId: ID! @index(name: "byStockTrade")
  isBuy: Boolean!
  price: Float!
  tranDate: AWSDateTime!
}

